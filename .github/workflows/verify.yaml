name: Verify Push Analytics Service

on:
    pull_request:
        types: ['opened', 'edited', 'reopened', 'synchronize', 'labeled']
        branches: ['master', 'beta', 'next', 'alpha']

env:
    LOG_LEVEL: 'scraper'
    DHIS2_IMAGE: 'dhis2/core-dev:2.41'

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
    verify:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
            - name: Setup Node JS
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'npm'
            - name: Install dependencies (incl. devDependencies)
              run: npm ci --include=dev
            - name: Build the project
              # Building includes TypeScript compilations so type errors are caught here too
              run: npm run build
            - name: Lint code
              run: npm run lint
            - name: Run tests
              run: npm run test:unit

    e2e:
        runs-on: ubuntu-latest
        if: contains(github.event.pull_request.labels.*.name, 'e2e')
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
            - name: Setup Docker BuildX
              uses: docker/setup-buildx-action@v3
            - name: Build local Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: false
                  load: true
                  tags: dhis2/push-analytics:local
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
            - name: Spin up the E2E environment
              # Fake SMTP is not needed for the e2e tests
              run: docker compose --env-file .env.e2e up -d web db db-dump post-install-scripts push-analytics
            - name: Show startup log for push-analytics
              run: docker compose --env-file .env.e2e logs push-analytics
            - name: Run the e2e test suite
              run: docker compose --env-file .env.e2e up --abort-on-container-exit --exit-code-from e2e e2e
            - name: Debug things
              if: ${{ failure() }}
              run: ls
            - name: Store scrape logs as a GHA artefact
              if: ${{ failure() }}
              uses: actions/upload-artifact@v4
              with:
                  name: scrape-markdown-logs
                  path: scrape-markdown-logs/
