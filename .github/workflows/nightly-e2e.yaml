name: Nightly regression e2e test

on:
    schedule:
        # mon-fri at 5:30 AM
        - cron: '30 5 * * 1-5'
    pull_request:
        types: ['opened', 'edited', 'reopened', 'synchronize', 'labeled']
        branches: ['master', 'beta', 'next', 'alpha']

env:
    DHIS2_IMAGE: 'dhis2/core-dev:2.41'
    PUSH_ANALYTICS_IMAGE: 'dhis2/push-analytics:local'

jobs:
    nightly-e2e:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
            - name: Setup Docker BuildX
              uses: docker/setup-buildx-action@v3
            - name: Build local Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: false
                  load: true
                  tags: dhis2/push-analytics:local
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
            - name: Spin up the E2E environment
              # Fake SMTP is not needed for the e2e tests
              run: docker compose --env-file ./.env.e2e up -d web db db-dump post-install-scripts push-analytics
            - name: List running Docker images
              run: docker ps --format '{{.Image}}'
            - name: Run the e2e test suite
              run: docker compose --env-file ./.env.e2e up --abort-on-container-exit --exit-code-from e2e e2e

    # send-slack-message:
    #   runs-on: ubuntu-latest
    #   needs: nightly-e2e
    #   if: |
    #       failure() &&
    #       !cancelled()
    #   steps:
    #       - name: Send failure message to analytics-internal-kfmt slack channel
    #         id: slack
    #         uses: slackapi/slack-github-action@v1.23.0
    #         with:
    #             channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
    #             slack-message: ':x: Line-listing-app e2e nightly build <https://cloud.cypress.io/projects/m5qvjx/runs?branches=[{"label":"master","suggested":false,"value":"master"}]|failed>'
    #         env:
    #             SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
